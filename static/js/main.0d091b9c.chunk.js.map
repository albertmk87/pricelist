{"version":3,"sources":["containers/Form.module.css","components/PriceList.module.css","components/Buttons.module.css","components/Button.module.css","components/PlanSummary.module.css","containers/Container.module.css","components/Modal.module.css","components/Button.js","components/PriceList.js","components/Modal.js","components/PlanSummary.js","components/Buttons.js","containers/Container.js","containers/Form.js","containers/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","className","classes","btnType","join","onClick","clicked","children","PriceList","spaceGB","space","currency","console","log","period","title","pricing","priceList","maxUsers","maxAdresses","maxDomains","Btn","button","selectedPlan","Modal","style","transform","this","show","opacity","React","Component","OrderSummary","plan","MaxSpace","Title","PlanSummary","MaxDomains","continuePlan","removeModal","Buttons","onChange","changePeriod","selectBtn","id","name","value","changeCurrency","Container","state","plans","clickable","e","newPeriod","target","setState","newCurrency","myHeaders","Headers","append","myInit","method","headers","mode","cache","fetch","then","response","json","res","Plans","slice","event","preventDefault","findPlan","find","ID","history","push","pathname","priceLists","map","Pricing","key","MaxAddresses","MaxMembers","Currency","Form","fullName","email","address","Math","random","toString","substr","sendInfo","info","wrapper","formWrapper","onSubmit","handleSubmit","noValidate","htmlFor","type","submit","MainPage","basename","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d091b9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__3trB8\",\"formWrapper\":\"Form_formWrapper__3S8gY\",\"info\":\"Form_info__2jsAU\",\"error\":\"Form_error__ONXwk\",\"fullName\":\"Form_fullName__2d4YT\",\"email\":\"Form_email__3YYW2\",\"address\":\"Form_address__2dY84\",\"submit\":\"Form_submit__2ZZWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PriceList\":\"PriceList_PriceList__33eWF\",\"priceList\":\"PriceList_priceList__ZuF6v\",\"Btn\":\"PriceList_Btn__3JG8N\",\"btn\":\"PriceList_btn__vbZCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Buttons\":\"Buttons_Buttons__2n_1n\",\"selectBtn\":\"Buttons_selectBtn__rmvEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__o21wl\",\"Success\":\"Button_Success__17eSQ\",\"Danger\":\"Button_Danger__mUMoP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlanSummary\":\"PlanSummary_PlanSummary__9_B7H\",\"Btn\":\"PlanSummary_Btn__6ANNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__stP-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2okMs\"};","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button=(props)=>{\r\n\r\n\treturn (\r\n\t\t\t\t<button className={[classes.Button, classes[props.btnType]].join(' ')} onClick={props.clicked}>\r\n\t\t\t\t{props.children}\r\n\t\t\t   </button>\t\t\r\n\t\t   )\r\n}\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './PriceList.module.css';\r\nimport Button from './Button.js';\r\n\r\nconst PriceList=(props)=>{\r\n\t\tconst moneySign='';\r\n\r\n\t\tconst spaceGB=props.space/1024/1024/1024;\r\n\t\tconst currency=props.currency;\r\n\t\tconsole.log(props.period)\r\n\treturn (\r\n\t\t \t <div className={classes.PriceList}>\r\n            <h2 className=\"header\">{props.title}</h2>\r\n            <h3><sup>{currency===\"EUR\" ? \"â‚¬\" : currency===\"USD\" ? \"$\" : \"CHf\"}</sup>{props.pricing}<span className=\"small\">{props.period==1 ? \"/mo\" : props.period==\"12\" ? \"/year\" : \"/2Year\"}</span></h3>\r\n            <p>Full-featured mailbox with advanced protection</p>\r\n             <ul className={classes.priceList}>\r\n                <li>{props.maxUsers} user</li>\r\n                <li>{spaceGB} GB storage per user *</li>\r\n                <li>{props.maxAdresses} addresses per user*</li>\r\n                <li>Supports {props.maxDomains} domains *</li>\r\n                <li>Catch all email, multi user management, priority support and more</li>\r\n           \t\t<li>ProtonVPN (optional)*</li>\r\n            </ul>      \r\n            <div className={classes.Btn}> \r\n            <Button btnType=\"Success\" className={classes.button} clicked={props.selectedPlan}>Select</Button>   \r\n    \t\t</div>     \r\n        </div>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default PriceList;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\n\r\n\r\nclass Modal extends React.Component{\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t <div className={classes.Modal} style={{transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\topacity:this.props.show ? '1' : '0'}}>\r\n\t\t\t\t\t\t  {this.props.children}\r\n\t\t\t\t\t     </div> \r\n\r\n\t\t\t\t\r\n\t\t\t   )\r\n\t}\r\n}\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Button from './Button.js';\r\nimport classes from './PlanSummary.module.css';\r\n\r\n\r\n\r\nclass OrderSummary extends React.Component{\r\n\r\n\r\nrender() {\r\n\t\t\r\n\t\tconst plan=this.props.selectedPlan;\r\n\t\tconst spaceGB=plan.MaxSpace/1024/1024/1024;\r\n\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>You choose the {plan.Title} plan</h2>\r\n\t\t\t\t\t<p>We believe privacy is a fundamental human right so we provide free accounts as a public service. You can still support us by telling your friends and family about ProtonMail, or making a donation. </p>\r\n\t\t\t\t\t<div className={classes.PlanSummary}>\t\r\n\t\t\t\t\t<p>Our {plan.Title} plan includes: </p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>{spaceGB} GB storage per user</li>\r\n\t\t\t\t\t\t<li>Supports {plan.MaxDomains} domains</li>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className={classes.Btn}> \r\n\t\t\t\t\t<Button clicked={this.props.continuePlan} btnType=\"Success\"> Continue</Button>\r\n\t\t\t\t\t<Button clicked={this.props.removeModal} btnType=\"Danger\"> Go back</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t)\r\n}\r\n}\r\n\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Buttons.module.css';\r\n\r\n\r\nconst Buttons=(props)=>{\r\n\treturn(\r\n\t\t\t<div className={classes.Buttons}>\r\n\t\t\t\t<select onChange={props.changePeriod} className={classes.selectBtn} id=\"periodTime\" name=\"time\">\r\n\t\t\t\t\t  <option value=\"1\">Monthly</option>\r\n\t\t\t\t\t  <option value=\"12\">Annualy</option>\r\n\t\t\t\t\t  <option value=\"24\">2 years</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t  <select onChange={props.changeCurrency} className={classes.selectBtn} id=\"currency\" name=\"currency\">\r\n\t\t\t\t\t  <option value=\"EUR\">EUR</option>\r\n\t\t\t\t\t  <option value=\"CHF\">CHF</option>\r\n\t\t\t\t\t  <option value=\"USD\">USD</option>\r\n\t\t\t\t</select>\r\n\r\n\t\t\t</div>\r\n\t\t\t)\r\n}\r\n\r\n\r\nexport default Buttons;","import React from 'react';\r\nimport PriceList from '../components/PriceList.js';\r\nimport classes from './Container.module.css';\r\nimport Modal from '../components/Modal.js';\r\nimport PlanSummary from '../components/PlanSummary.js';\r\nimport Buttons from '../components/Buttons.js';\r\n\r\n\r\nclass Container extends React.Component{\r\n\t\r\n\tstate={\r\n\t\tplans:[],\r\n\t\tcurrency:\"EUR\",\r\n\t\tperiod:1,\r\n\t\tselectedPlan:{},\r\n\t\tclickable:true,\r\n\t\tshow:false\r\n\r\n\t}\r\n\t// async componentDidMount(){\r\n\t// \tlet url=\"https://api.protonmail.ch/payments/plans?EUR\";\r\n //    \t  let obj=await (await fetch(url)).json();\r\n //    \t  this.setState({result:obj});\r\n\t// }\r\n\t// async componentDidMount() {\r\n //    const myHeaders = new Headers();\r\n\r\n //    myHeaders.append('Content-Type', 'application/json;charset=utf-8');\r\n //    myHeaders.append('x-pm-appversion', 'Other');\r\n //    myHeaders.append('x-pm-apiversion', '3');\r\n //    myHeaders.append('Accept', 'application/vnd.protonmail.v1+json');\r\n\r\n //    const myInit = {\r\n //        method: 'GET',\r\n //        headers: myHeaders,\r\n //        mode: 'cors',\r\n //        cache: 'default'\r\n //    };\r\n\r\n //    const response = await fetch(`https://api.protonmail.ch/payments/plans?EUR`, myInit)\r\n //    const results = response.json();\r\n //    \tconst result=results.Plans;\r\n //    this.setState({result:result});\r\n// };\r\n\t\r\n\tcomponentDidMount() {\r\n    const myHeaders = new Headers();\r\n\r\n    myHeaders.append('Content-Type', 'application/json;charset=utf-8');\r\n    myHeaders.append('x-pm-appversion', 'Other');\r\n    myHeaders.append('x-pm-apiversion', '3');\r\n    myHeaders.append('Accept', 'application/vnd.protonmail.v1+json');\r\n\r\n    const myInit = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        mode: 'cors',\r\n        cache: 'default'\r\n    };\r\n    // https://api.protonmail.ch/payments/plans?USD\r\n    // https://api.protonmail.ch/payments/plans?Currency=EUR\r\n    fetch('https://api.protonmail.ch/payments/plans?Currency=EUR', myInit)\r\n    .then(response=>{\r\n    \treturn response.json();\r\n    })\r\n    .then(res=>{\r\n    \tconst plans=res.Plans.slice(2,6);\r\n    \tconsole.log(plans)\r\n    \tthis.setState({plans:plans});\r\n    })\r\n   \r\n};\r\n\r\n\tchangePeriod=(e)=>{\r\n\t\tconst newPeriod=e.target.value;\r\n\t\tthis.setState({period:newPeriod});\r\n\t}\r\n\r\n\tchangeCurrency=(e)=>{\r\n\t\tconst newCurrency=e.target.value;\r\n\t\tconsole.log(newCurrency)\r\n\t\tconst myHeaders = new Headers();\r\n\r\n\t    myHeaders.append('Content-Type', 'application/json;charset=utf-8');\r\n\t    myHeaders.append('x-pm-appversion', 'Other');\r\n\t    myHeaders.append('x-pm-apiversion', '3');\r\n\t    myHeaders.append('Accept', 'application/vnd.protonmail.v1+json');\r\n\r\n    \tconst myInit = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        mode: 'cors',\r\n        cache: 'default'\r\n    };\r\n\r\n    fetch(`https://api.protonmail.ch/payments/plans?Currency=${newCurrency}`, myInit)\r\n    .then(response=>{\r\n    \treturn response.json();\r\n    })\r\n    .then(res=>{\r\n    \tconst plans=res.Plans.slice(2,6);\r\n    \tconsole.log(plans)\r\n    \tthis.setState({plans:plans, currency:newCurrency});\r\n    })\r\n\r\n\t}\r\n\r\n\r\n\tselectedPlan=(event,id)=>{\r\n\t\tif(this.state.clickable){\r\n\t\tevent.preventDefault();\r\n\t\tconst plans=this.state.plans;\r\n\t\tconsole.log(plans);\r\n\t\tconst findPlan=plans.find(plan=>{\t\r\n\t\t\treturn plan.ID===id});\r\n\t\tthis.setState({selectedPlan:findPlan, show:true, clickable:false});\r\n\t}\r\n\t\t\r\n\t}\r\n\r\n\tcontinuePlan=()=>{\r\n\t\tthis.props.history.push({pathname:\"/form\"});\r\n\t}\r\n\r\n\tremoveModal=()=>{\r\n\t\tthis.setState({show:false, clickable:true})\r\n\t}\r\n\r\n\trender(){\r\n\r\n\r\n\r\n\t\tlet priceLists=\"\";\r\n\t\tconst plans=this.state.plans;\r\n\t\tif(plans){\r\n\t\t\tpriceLists=plans.map(plan=>{\r\n\t\t\t\tconst pricing=plan.Pricing[this.state.period];\r\n\t\t\t\t// console.log(plan);\r\n\t\t\t\treturn <PriceList key={plan.ID} id={plan.ID} selectedPlan={(event)=>this.selectedPlan(event,plan.ID)} title={plan.Title} maxAdresses={plan.MaxAddresses} maxDomains={plan.MaxDomains} maxUsers={plan.MaxMembers} space={plan.MaxSpace} pricing={pricing} period={this.state.period} currency={plan.Currency} />\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Buttons changePeriod={this.changePeriod} changeCurrency={this.changeCurrency}/>\r\n\t\t\t\t<div className={classes.Container}>\r\n\t\t\t\t\t{priceLists}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Modal show={this.state.show}>\r\n\t\t\t\t\t<PlanSummary continuePlan={this.continuePlan} removeModal={this.removeModal} selectedPlan={this.state.selectedPlan}/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t</Modal>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Container;\r\n\r\n // fetch('https://api.protonmail.ch/payments/plans?EUR', myInit)\r\n //    .then(res=>res.json())\r\n //    .then(json=>this.setState({plans:json.Plans}));","import React from 'react';\r\nimport classes from './Form.module.css';\r\nimport {Route, NavLink, Switch, Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\n   class Form extends React.Component {\r\n\r\n   \tstate={\r\n   \t\tfullName:'',\r\n   \t\temail:'',\r\n   \t\taddress:'',\r\n   \t}\r\n\r\n   \tID=()=> {\r\n  // Math.random should be unique because of its seeding algorithm.\r\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n  // after the decimal.\r\n \t return '_' + Math.random().toString(36).substr(2, 9);\r\n\t\t\t};\r\n\r\n   \tsendInfo=()=>{\r\n\t\tif(this.state.fullName!==\"\" && this.state.email !==\"\" && this.state.address!==\"\"){\r\n\t\t\tconst newInfo={\r\n\t\t\t\tid:this.ID(),\r\n\t\t\t\tfullName:this.state.fullName,\r\n\t\t\t\temail:this.state.email,\r\n\t\t\t\taddress:this.state.address\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tthis.props.history.push({pathname:\"/\"});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n   \trender(){\r\n\r\n   \t\t\tlet info=<h2>Fill in all fields and we will contact you shortly</h2>;\r\n   \t\t\t\r\n\r\n   \t\treturn(\r\n   \t\t\t\t  <div className={classes.wrapper}>\r\n   \t\t\t\t    <div className={classes.formWrapper}>\r\n        \t\t  {info}\r\n          <form onSubmit={this.handleSubmit} noValidate >\r\n            <div className={classes.fullName}>\r\n              <label htmlFor=\"fullName\">Full Name</label>\r\n              <input type='text' name='fullName' onChange={(event) => this.setState({fullName: event.target.value})} noValidate />\r\n            </div>\r\n            <div className={classes.email}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type='email' name='email'onChange={(event) => this.setState({email: event.target.value})} noValidate />\r\n            </div>\r\n           <div className={classes.address}>\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input type='text' name='address' onChange={(event) => this.setState({address: event.target.value})} noValidate />\r\n            </div>\r\n          \t\r\n            <div className={classes.submit}>\r\n              <button onClick={this.sendInfo}>Submit</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n   \t\t\t\t</div>\r\n\r\n   \t\t\t)\r\n   \t}\r\n\r\n\r\n}\r\n\r\n\r\nexport default Form;","   // <Container />\r\nimport React from 'react';\r\nimport Container from './Container.js';\r\nimport Form from './Form.js';\r\nimport {Route, NavLink, Switch, Redirect, HashRouter} from 'react-router-dom';\r\n\r\n\r\n\r\n   class MainPage extends React.Component {\r\n\r\n\r\n   \trender(){\r\n\r\n   \t\treturn(\r\n   \t\t\t<HashRouter basename=\"/\">\r\n   \t\t\t\t<div>\r\n   \t\t\t\t<Switch>\r\n   \t\t\t\t<Route path=\"/\" exact component={Container} />\r\n   \t\t\t\t<Route path=\"/form\" exact component={Form} />\r\n   \t\t\t\t</Switch>\r\n   \t\t\t\t</div>\r\n   \t\t\t\t</HashRouter>\r\n\r\n   \t\t\t)\r\n   \t}\r\n\r\n\r\n}\r\n\r\n\r\nexport default MainPage;","import React from 'react';\nimport Container from './containers/Container.js';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport MainPage from './containers/MainPage.js';\nfunction App() {\n  return (\n  \t<BrowserRouter>\n    <div className=\"App\">\n    <MainPage />\n   \n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}